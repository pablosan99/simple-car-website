{"version":3,"file":"component---src-pages-index-tsx-343d23067d4237b53fe4.js","mappings":"gNAIe,SAASA,IACtB,OACEC,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAACE,EAAAA,EAAD,CACEC,IAAK,sBACLC,IAAI,aACJC,MAAO,KACPC,OAAQ,IAJV,uB,4CCES,SAASC,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,KACrCC,GAAMC,EAAAA,EAAAA,GAASH,EAAQI,iBAC7B,OACEZ,EAAAA,cAACa,EAAAA,GAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,IAAKP,EAAKQ,GAAIC,IAAI,EAAOC,GAAI,EAAGC,GAAI,GACvDpB,EAAAA,cAACa,EAAAA,GAAD,CAAMC,MAAI,EAACI,GAAI,IACblB,EAAAA,cAACC,EAAAA,EAAD,CAAKoB,QAAQ,OAAOC,eAAe,eAAeC,GAAI,CACpDC,OAAO,oBACPC,UAAW,UAEXzB,EAAAA,cAACC,EAAAA,EAAD,CAAKyB,KAAM,EAAGC,EAAG,EAAGJ,GAAI,CACtBK,gBAAgB,YAEhB5B,EAAAA,cAAC6B,EAAAA,EAAD,CAAYC,QAAQ,SAASrB,EAAKsB,YAAYC,OAC9ChC,EAAAA,cAAC6B,EAAAA,EAAD,CAAYC,QAAQ,WAAWrB,EAAKsB,YAAYE,cAElDjC,EAAAA,cAACC,EAAAA,EAAD,CAAKoB,QAAQ,OAAOK,KAAM,GACxB1B,EAAAA,cAACkC,EAAAA,EAAD,CAAa9B,IAAK,GAAI+B,MAAOzB,QCpB1B,SAAS0B,IAEtB,IAAMC,GAAOC,EAAAA,EAAAA,IAAe,aAuBpBC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QAEhB,OACExC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAD,CAAKoB,QAAQ,OAAOC,eAAe,SAASmB,EAAG,GAC7CzC,EAAAA,cAAC6B,EAAAA,EAAD,CAAYC,QAAQ,MAApB,SAEF9B,EAAAA,cAACa,EAAAA,GAAD,CAAME,WAAS,EAAC2B,QAAS,GACtBH,EAAOI,MAAMC,KAAI,SAACnC,EAAWoC,GAC5B,IAAMrC,EAAUgC,EAAQG,MAAMG,MAAK,SAACC,GAAD,OAAYA,EAAEC,MAAQvC,EAAKwC,QAC9D,OAAOjD,EAAAA,cAACO,EAAD,CAAWS,IAAK6B,EAAKpC,KAAMA,EAAMD,QAASA,SCjC3D,IAmBA,EAnBkB,WAEhB,OACER,EAAAA,cAACkD,EAAAA,EAAD,KACElD,EAAAA,cAACC,EAAAA,EAAD,CAAKoB,QAAQ,OAAO8B,cAAc,SAASC,WAAW,SAASzB,EAAG,GAChE3B,EAAAA,cAACD,EAAD,MACAC,EAAAA,cAACC,EAAAA,EAAD,CAAKoD,GAAI,GACPrD,EAAAA,cAACsD,EAAAA,EAAD,CAAQxB,QAAQ,YAAYyB,MAAM,UAAUC,UAAWC,EAAAA,GAAMC,GAAG,iBAC9D1D,EAAAA,cAAC6B,EAAAA,EAAD,CAAYC,QAAQ,SAApB,wBAKJ9B,EAAAA,cAACoC,EAAD,U","sources":["webpack://car-configurator/./src/components/Hero.tsx","webpack://car-configurator/./src/components/CarWidget.tsx","webpack://car-configurator/./src/components/Cars.tsx","webpack://car-configurator/./src/pages/index.tsx"],"sourcesContent":["import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\nimport { Box } from '@mui/material';\n\nexport default function Hero() {\n  return (\n    <Box>\n      <StaticImage\n        src={\"../images/car-3.jpg\"}\n        alt=\"Hero image\"\n        width={2200}\n        height={550}\n      />\n    </Box>\n  )\n}","import { Box, Grid, Typography } from '@mui/material';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\ntype Props = {\n  node: { id: number, frontmatter: { title: string, description: string } };\n  imgNode: { childImageSharp: any};\n}\n\nexport default function CarWidget({ imgNode, node }: Props) {\n  const img = getImage(imgNode.childImageSharp);\n  return (\n    <Grid item container key={node.id} xs={false} sm={6} md={4}>\n      <Grid item xs={12}>\n        <Box display=\"flex\" justifyContent=\"space-around\" sx={{\n          border: `1px solid #e0e0e0`,\n          minHeight: '350px'\n        }}>\n          <Box flex={1} p={2} sx={{\n            backgroundColor: `#ede8e8`,\n          }}>\n            <Typography variant=\"body1\">{node.frontmatter.title}</Typography>\n            <Typography variant=\"caption\">{node.frontmatter.description}</Typography>\n          </Box>\n          <Box display=\"flex\" flex={1}>\n            <GatsbyImage alt={\"\"} image={img!}/>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  )\n}","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Box, Grid, Typography } from '@mui/material';\nimport CarWidget from './CarWidget';\n\nexport default function Cars() {\n\n  const data = useStaticQuery(graphql`\n   query getData {\n      allMdx {\n        nodes {\n          frontmatter {\n            date\n            description\n            title\n          }\n          id\n          slug\n        }\n      }\n      allFile(filter: {sourceInstanceName: {eq: \"images\"}}) {\n        nodes {\n          name\n          childImageSharp {\n             gatsbyImageData(formats: JPG, layout: CONSTRAINED, placeholder: BLURRED)\n          }\n        }\n      }\n  }\n`)\n  const { allMdx, allFile } = data;\n\n  return (\n    <div>\n      <Box display=\"flex\" justifyContent=\"center\" m={4}>\n        <Typography variant=\"h4\">Cars</Typography>\n      </Box>\n      <Grid container spacing={1}>\n        {allMdx.nodes.map((node: any, idx: number) => {\n          const imgNode = allFile.nodes.find((x: any) => x.name == node.slug);\n          return <CarWidget key={idx} node={node} imgNode={imgNode} />\n        })}\n      </Grid>\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport Layout from '../components/Layout';\nimport Hero from '../components/Hero';\nimport { Link } from 'gatsby';\nimport { Box, Button, Typography } from '@mui/material';\nimport Cars from '../components/Cars';\n\nconst IndexPage = () => {\n\n  return (\n    <Layout>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={2}>\n        <Hero/>\n        <Box mt={2}>\n          <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/car-selector\">\n            <Typography variant=\"body1\">\n              Configure Your Car\n            </Typography>\n          </Button>\n        </Box>\n        <Cars />\n      </Box>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["Hero","React","Box","StaticImage","src","alt","width","height","CarWidget","imgNode","node","img","getImage","childImageSharp","Grid","item","container","key","id","xs","sm","md","display","justifyContent","sx","border","minHeight","flex","p","backgroundColor","Typography","variant","frontmatter","title","description","GatsbyImage","image","Cars","data","useStaticQuery","allMdx","allFile","m","spacing","nodes","map","idx","find","x","name","slug","Layout","flexDirection","alignItems","mt","Button","color","component","Link","to"],"sourceRoot":""}